{"ast":null,"code":"var _jsxFileName = \"/Users/renatosantos/Dropbox/Aplicativos/NONIO-Inforestudante/Licenciatura em Engenharia Informa\\u0301tica/2019 2020/2.\\xBA Semestre/Engenharia de Servic\\u0327os/Service-Engineering-Project/src/AddressForm.js\";\nimport React, { Component } from 'react';\nimport AddressSuggest from './AddressSuggest';\nimport AddressInput from './AddressInput';\nimport axios from 'axios';\nimport TranscribeFetch from './getTranscribeStatus';\nconst API_KEY = 'tX1z9uiD44rPpVd1CGR_eG3VBZ4mubljw0ljaLFIaRQ';\nlet textoTrans = this;\n\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState(); // User has entered something in the address bar\n\n    this.onQuery = this.onQuery.bind(this); // User has entered something in an address field\n\n    this.onAddressChange = this.onAddressChange.bind(this); // User has clicked the check button\n\n    this.onCheck = this.onCheck.bind(this); // User has clicked the clear button\n\n    this.onClear = this.onClear.bind(this);\n  }\n\n  onQuery(evt) {\n    const query = evt.target.value;\n\n    if (!query.length > 0) {\n      this.setState(this.getInitialState());\n      return;\n    }\n\n    const self = this;\n    axios.get('https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json', {\n      'params': {\n        'query': query,\n        'apiKey': API_KEY,\n        'maxresults': 10 //10\n\n      }\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.data.suggestions.length > 0) {\n        const id = response.data.suggestions[0].locationId;\n        const address = response.data.suggestions[0].address;\n        self.setState({\n          'address': address,\n          'query': query,\n          'locationId': id\n        });\n      } else {\n        const state = self.getInitialState();\n        self.setState(state);\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const url = \"https://3xeam2g64j.execute-api.us-east-1.amazonaws.com/transcribe/transcribe\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      body: data.body\n    });\n    console.log(\"### \" + this.state.body);\n    textoTrans = this.state.body;\n  }\n\n  getInitialState() {\n    let textTranscribe = this;\n    axios.get('https://3xeam2g64j.execute-api.us-east-1.amazonaws.com/transcribe/transcribe').then(function (response) {\n      textTranscribe = response.data.body;\n      console.log(\"llll \" + textTranscribe);\n    });\n    console.log(\"trans...\" + JSON.stringify(textTranscribe));\n    return {\n      'address': {\n        'street': JSON.stringify(textTranscribe.toString()),\n        //inserir aqui texto do transcribe\n        'city': '',\n        'postalCode': '',\n        'country': ''\n      },\n      'query': '',\n      'locationId': '',\n      'isChecked': false,\n      'coords': {}\n    };\n  }\n\n  onClear(evt) {\n    const state = this.getInitialState();\n    this.setState(state);\n  }\n\n  onAddressChange(evt) {\n    const id = evt.target.id;\n    const val = evt.target.value;\n    let state = this.state;\n    state.address[id] = val;\n    this.setState(state);\n  }\n\n  onCheck(evt) {\n    let params = {\n      'apiKey': API_KEY\n    };\n\n    if (this.state.locationId.length > 0) {\n      params['locationId'] = this.state.locationId;\n    } else {\n      params['searchtext'] = //this.state.body\n      this.state.address.street + this.state.address.city + this.state.address.postalCode + this.state.address.country;\n    } // -----------------------------------------\n    // ------------- CHECK ADDRESS -------------\n    // -----------------------------------------\n\n\n    const self = this;\n    axios.get('https://geocoder.ls.hereapi.com/6.2/geocode.json', {\n      'params': params\n    }).then(function (response) {\n      console.log(response);\n      const view = response.data.Response.View;\n\n      if (view.length > 0 && view[0].Result.length > 0) {\n        const location = view[0].Result[0].Location;\n        self.setState({\n          'isChecked': 'true',\n          'locationId': '',\n          'query': location.Address.Label,\n          'address': {\n            'street': location.Address.HouseNumber + ' ' + location.Address.Street,\n            'city': location.Address.City,\n            'postalCode': location.Address.PostalCode,\n            'country': location.Address.Country\n          },\n          'coords': {\n            'lat': location.DisplayPosition.Latitude,\n            'lon': location.DisplayPosition.Longitude\n          }\n        });\n      } else {\n        self.setState({\n          'isChecked': true,\n          'coords': null\n        });\n      }\n    }).catch(function (error) {\n      console.log('caught failed query');\n      self.setState({\n        'isChecked': true,\n        'coords': null\n      });\n    });\n  }\n\n  alert() {\n    if (!this.state.isChecked) {\n      return;\n    }\n\n    if (this.state.coords === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, \"Enderen\\xE7o inv\\xE1lido!\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, \"Coordenadas: \", this.state.coords.lat, \", \", this.state.coords.lon, \".\");\n    }\n  }\n\n  render() {\n    let result = this.alert();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddressSuggest, {\n      query: this.state.query //text\n      ,\n      onChange: this.onQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AddressInput, {\n      street: this.state.address.street,\n      city: this.state.address.city,\n      postalCode: this.state.address.postalCode,\n      country: this.state.address.country,\n      onChange: this.onAddressChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), result, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, \"Check\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-secondary\",\n      onClick: this.onClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"Clear\"));\n  }\n\n}\n\nexport default AddressForm;","map":{"version":3,"sources":["/Users/renatosantos/Dropbox/Aplicativos/NONIO-Inforestudante/Licenciatura em Engenharia Informática/2019 2020/2.º Semestre/Engenharia de Serviços/Service-Engineering-Project/src/AddressForm.js"],"names":["React","Component","AddressSuggest","AddressInput","axios","TranscribeFetch","API_KEY","textoTrans","AddressForm","constructor","props","state","getInitialState","onQuery","bind","onAddressChange","onCheck","onClear","evt","query","target","value","length","setState","self","get","then","response","console","log","data","suggestions","id","locationId","address","componentDidMount","url","fetch","json","body","textTranscribe","JSON","stringify","toString","val","params","street","city","postalCode","country","view","Response","View","Result","location","Location","Address","Label","HouseNumber","Street","City","PostalCode","Country","DisplayPosition","Latitude","Longitude","catch","error","alert","isChecked","coords","lat","lon","render","result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AddressSuggest from './AddressSuggest';\nimport AddressInput from './AddressInput';\nimport axios from 'axios';\nimport TranscribeFetch from './getTranscribeStatus';\n\n\nconst API_KEY = 'tX1z9uiD44rPpVd1CGR_eG3VBZ4mubljw0ljaLFIaRQ';\nlet textoTrans = this;\n\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getInitialState();\n     \n    // User has entered something in the address bar\n    this.onQuery = this.onQuery.bind(this);\n    // User has entered something in an address field\n    this.onAddressChange = this.onAddressChange.bind(this);\n    // User has clicked the check button\n    this.onCheck = this.onCheck.bind(this);\n    // User has clicked the clear button\n    this.onClear = this.onClear.bind(this);\n\n\n  }\n\n  onQuery(evt) {\n    const query = evt.target.value;\n\n    if (!query.length > 0) {\n      this.setState(this.getInitialState());\n      return;\n    }\n\n    const self = this;\n    axios.get('https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json',\n      {'params': {\n        'query': query,\n        'apiKey': API_KEY,\n        'maxresults': 10, //10\n      }}).then(function (response) {\n          console.log(response);\n          if (response.data.suggestions.length > 0) {\n            const id = response.data.suggestions[0].locationId;\n            const address = response.data.suggestions[0].address;\n            self.setState({\n              'address' : address,\n              'query' : query,\n              'locationId': id\n            })\n          } else {\n            const state = self.getInitialState();\n            self.setState(state);\n          }\n      });\n  }\n  \n  async componentDidMount() {\n    const url = \"https://3xeam2g64j.execute-api.us-east-1.amazonaws.com/transcribe/transcribe\";\n    const response = await fetch(url)\n    const data = await response.json();\n    console.log(data);\n    this.setState({ body: data.body })\n    console.log(\"### \"+this.state.body);\n    textoTrans = this.state.body;\n}    \n\n  getInitialState() {\n    let textTranscribe = this\n    axios.get('https://3xeam2g64j.execute-api.us-east-1.amazonaws.com/transcribe/transcribe'\n      ).then(function (response) {\n          textTranscribe = response.data.body;\n          console.log(\"llll \"+textTranscribe);\n      });\n    console.log(\"trans...\"+JSON.stringify(textTranscribe));\n    return {\n      'address': {\n        'street': JSON.stringify(textTranscribe.toString()), //inserir aqui texto do transcribe\n        'city': '',\n        'postalCode': '',\n        'country': ''\n      },\n      'query': '',\n      'locationId': '',\n      'isChecked': false,\n      'coords': {},\n    }\n    \n  }\n\n  onClear(evt) {\n    const state = this.getInitialState();\n    this.setState(state);\n  }\n\n  onAddressChange(evt) {\n    const id = evt.target.id\n    const val = evt.target.value\n\n    let state = this.state\n    state.address[id] = val;\n    this.setState(state);\n  }\n\n  onCheck(evt) {\n    let params = {\n        'apiKey': API_KEY,\n    }\n\n    if (this.state.locationId.length > 0) {\n      params['locationId'] = this.state.locationId;\n    } else {\n      params['searchtext'] = \n        //this.state.body\n        this.state.address.street\n        + this.state.address.city\n        + this.state.address.postalCode\n        + this.state.address.country;\n    }\n\n    // -----------------------------------------\n    // ------------- CHECK ADDRESS -------------\n    // -----------------------------------------\n\n    const self = this;\n    axios.get('https://geocoder.ls.hereapi.com/6.2/geocode.json',\n      {'params': params }\n      ).then(function (response) {\n        console.log(response);\n        const view = response.data.Response.View\n        if (view.length > 0 && view[0].Result.length > 0) {\n          const location = view[0].Result[0].Location;\n\n          self.setState({\n            'isChecked': 'true',\n            'locationId': '',\n            'query': location.Address.Label,\n            'address': {\n              'street': location.Address.HouseNumber + ' ' + location.Address.Street,\n              'city': location.Address.City,\n              'postalCode': location.Address.PostalCode,\n              'country': location.Address.Country\n            },\n            'coords': {\n              'lat': location.DisplayPosition.Latitude,\n              'lon': location.DisplayPosition.Longitude\n            }\n          });\n        } else {\n          self.setState({\n            'isChecked': true,\n            'coords': null,\n          })\n        }\n\n      })\n      .catch(function (error) {\n        console.log('caught failed query');\n        self.setState({\n          'isChecked': true,\n          'coords': null,\n        });\n      });\n  }\n\n  alert() {\n    if (!this.state.isChecked) {\n      return;\n    }\n\n    if (this.state.coords === null) {\n      return (\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <b>Enderenço inválido!</b> \n        </div>\n      );\n    } else {\n      return (\n        <div className=\"alert alert-success\" role=\"alert\">\n         Coordenadas: {this.state.coords.lat}, {this.state.coords.lon}.\n        </div>\n      );\n    }\n  }\n\n  render() {\n    let result = this.alert();\n    return (\n        <div className=\"container\">\n          <AddressSuggest\n            query={this.state.query} //text\n            onChange={this.onQuery} \n            />\n          <AddressInput\n            street={this.state.address.street}\n            city={this.state.address.city}\n            postalCode={this.state.address.postalCode}\n            country={this.state.address.country}\n            onChange={this.onAddressChange}\n            />\n          <br/>\n          { result }\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={this.onCheck}>Check</button>\n          <button type=\"submit\" className=\"btn btn-outline-secondary\" onClick={this.onClear}>Clear</button>\n        </div>\n      );\n  }\n}\n\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}